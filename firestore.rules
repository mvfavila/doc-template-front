rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read: if isSystemAdmin() || isOfficeAdmin() || isCustomer();
      allow update: if 
        // User is authenticated
        request.auth != null &&
        // Only allow updating isActive field
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['isActive', 'lastModifiedBy']) &&
        request.resource.data.lastModifiedBy == request.auth.uid &&
        // Updater is an office admin in the same office
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'office_admin' &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.officeId == resource.data.officeId &&
        // Target is a customer
        resource.data.role == 'customer';
      allow write: if isSystemAdmin();
      allow create: if isOfficeAdmin()
          && request.resource.data.role == 'customer';
    }

    match /auditLogs/{officeId}/userLogs/{logId} {
      allow read: if isSystemAdmin();
      allow create: if false;
    }

    // Allow creation of office documents (but not modification)
    match /auditLogs/{officeId} {
      allow create: if request.auth != null;
      allow read, update, delete: if false;
    }
    
    match /offices/{officeId} {
      allow read: if isSystemAdmin() || isSpecificOfficeAdmin(officeId);
      allow write: if isSystemAdmin();
    }
    
    match /templates/{templateId} {
      allow write: if isOfficeAdmin();
      allow read: if isOfficeAdmin() || isCustomer();
    }
    
    match /customer_templates/{customerTemplateId} {
      allow read: if isSpecificOfficeAdmin(resource.data.officeId) || 
                    (isCustomer() && resource.data.customerId == request.auth.uid);
      allow update: if isSpecificOfficeAdmin(resource.data.officeId);
      allow create: if isOfficeAdmin();
    }
    
    match /forms/{formId} {
      allow read: if isSpecificOfficeAdmin(resource.data.officeId) || 
                    (isCustomer() && resource.data.customerId == request.auth.uid);
      allow update: if (isSpecificOfficeAdmin(resource.data.officeId) || 
                      (isCustomer() && resource.data.customerId == request.auth.uid && 
                       resource.data.status == "pending"));
      allow create: if request.auth != null 
                        && getUserData(request.auth.uid).role == 'office_admin';
    }
    
    match /document_jobs/{jobId} {
      allow create, read: if isOfficeAdmin();
    }
    
    match /admins/{uid} {
      allow read, write: if false; // should never be changed
    }
    
    function isSystemAdmin() {
      return request.auth != null &&
            request.auth.token.role == "system_admin";
    }
    
    function isOfficeAdmin() {
      return request.auth != null &&
            request.auth.token.role == "office_admin";
    }
    
    function isSpecificOfficeAdmin(officeId) {
      return request.auth != null &&
            request.auth.token.role == "office_admin" &&
            request.auth.token.officeId == officeId;
    }
    
    function isCustomer() {
      return request.auth != null &&
            request.auth.token.role == "customer";
    }
    
    function getUserData(id) {
      return get(/databases/$(database)/documents/users/$(id)).data;
    }
  }
}